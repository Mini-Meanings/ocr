<style lang="less">
  .tags {
    display: flex;
    font-size: 32rpx;
    justify-content: space-around;
    justify-content:space-around;
    margin-top:60rpx;
    margin-bottom:50rpx;
    padding:0 15rpx;
  }
  .tags .list {
    border:1px solid;
    padding:8rpx 30rpx;
    border-radius:40rpx;
    opacity:0.6;
  }
  .tags .ripple {
    position: relative;
    overflow: hidden;
  }

  .tags .ripple:after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    // border-radius: 50%;
    top: 0;
    left: 0;
    pointer-events: none;
    background-image: radial-gradient(circle, #666 10%, transparent 10.01%);
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10, 10);
    opacity: 0;
    transition: transform .4s, opacity .5s;
  }
  .tags .ripple:active:after {
    transform: scale(0, 0);
    opacity: .3;
    transition: 0s;
  }
</style>
<template>
  <view class="tags">
    <view class="list" wx:for="{{list}}" wx:for-index="index" wx:for-item="item" wx:key="id">
      <text class="ripple" @tap="tap({{item.id}})">{{item.title}}</text>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import 'wepy-async-function'; 

  export default class Tags extends wepy.component {
    data = {
      list: [
        {
          id: 'id',
          title: '身份证'
        },
        {
          id: 'card',
          title: '银行卡'
        },
        {
          id: 'drive',
          title: '驾驶证'
        },
        {
          id: 'enhance',
          title: '生僻字'
        },
      ],
      count: {
        general: 0,
        receipt: 0, // 票据
        idcard: 0,
        drivecard: 0,
        bankcard: 0,
        enhance: 0,
      },
    }
    methods = {
      async tap (e) {
        console.log(e,'tap');
        await this.getOneLimitTimes();
        if(e === 'id' && this.count.idcard === 0) {
          this.showWarn('身份证');
          return;
        } else if(e === 'card' && this.count.bankcard === 0) {
          this.showWarn('银行卡');
          return;
        } else if(e === 'drive' && this.count.drivecard === 0) {
          this.showWarn('驾驶证');
          return;
        } else if(e === 'enhance' && this.count.enhance === 0) {
          this.showWarn('生僻字');
          return;
        }
        wx.chooseImage({
          count: 1,
          // sizeType: ['original', 'compressed'],
          sizeType: ['compressed'],
          sourceType: ['album', 'camera'],
          success: function (res) {
            let tempFilePaths = res.tempFilePaths;
            wx.setStorageSync('imageurl',tempFilePaths[0]);

            if(e === 'enhance') {
              wx.navigateTo({
                url: `crop1`
              });
              wx.setStorageSync('type', e);
            } else {
              wx.navigateTo({
                url: `preview?type=${e}`
              });
              wx.setStorageSync('type', e);
            }
          }
        })
      }
    }

    showWarn (txt) {
      wx.showModal({
        title: '提示',
        confirmText: '帮助',
        // cancelText: '',
        content: `今日${txt}「免费」次数已经用完，请使用其他类型。或等待次日恢复使用次数!`,
        success: function(res) {
          if (res.confirm) {
            // console.log('用户点击确定');
            wx.navigateTo({
              url: 'help'
            })
          } else if (res.cancel) {
            console.log('用户点击取消');
          }
        }
      })
    }

    getOneLimitTimes() {
      // console.log(wx.getStorageSync('userinfo'),'tags');
      if(!wx.getStorageSync('userinfo')) return;
      let self = this;
      wx.request({
        url: 'https://www.iocr.vip/ai/users/times/me',
        header: {authid:wx.getStorageSync('userinfo')},
        success: function(res) {
          console.log(res.data,'tags');
          if(res.data.code === 200) {
            let temp = res.data.data;
            self.count = {
              general: temp.general,
              receipt: temp.receipt,
              idcard: temp.idcard,
              drivecard: temp.drivecard,
              bankcard: temp.bankcard,
              enhance: temp.enhance
            }
            self.$apply();
          }
        }
      })
    }

    onLoad () {
      this.getOneLimitTimes();
    }
  }
</script>
