<style lang="less">
  .we-slide{
    display: flex;
    // align-items: center;
    justify-content: center;
  }
  .swip{
    // display: flex;
    // width:230%;
    // transform: translateX(-485rpx);
  }
  .swip .item {
    width: 540rpx;
    height: 800rpx;
    margin:0 20rpx;
    border-radius:15rpx;
    overflow: hidden;
    background: #fff;
    box-shadow: 0 0 5rpx #999;
  }
  .swip .title {
    color:#141414;
    display:block;
    padding:0 20rpx;
    font-size:45rpx;
  }
  .swip .desc {
    color:#8b8b8b;
    padding: 10rpx 20rpx;
    font-size:30rpx;
    text-align: justify;
    display:block;
  }
  .swip image {
    width: 540rpx;
    height: 585rpx;
  }
  .swip .next {
    position: absolute;
    top: 560rpx;
    right: 15rpx;
    z-index: 2;
    width:60rpx;
    height:60rpx;
  }
  .swip .prev {
    position: absolute;
    top: 560rpx;
    left: 15rpx;
    z-index: 2;
    width:60rpx;
    height:60rpx;
  }
</style>
<template>
  <view  class="swip">
    <image wx:if="{{rflag}}" @tap="goNext" class="next" src="../image/next.png" />
    <image wx:if="{{lflag}}" @tap="goPrev" class="prev" src="../image/prev.png" />
    <weSwiper :option="swiper">
      <view class="we-slide">
        <view class="item" @tap="upload(generate,{{count.general}})">
          <image lazy-load="true" src="../image/temp1.png" />
          <text class="title">通用文字识别（{{count.general}} 次）</text>
          <text class="desc">提供快速的图片识别方式，识别类型多，但同时存在较多冗余数据。</text>
        </view>
      </view>
      <view class="we-slide">
        <view class="item" @tap="upload(ticket,{{count.receipt}})">
          <image lazy-load="true" src="../image/temp5.png" />
          <text class="title">票据识别（{{count.receipt}} 次）</text>
          <text class="desc">针对票据类型图片进行识别，必要时需要裁切图片，确定识别范围。</text>
        </view>
      </view>
      <view class="we-slide">
        <view class="item" @tap="upload(id,{{count.idcard}})">
          <image lazy-load="true" src="../image/temp2.png" />
          <text class="title">身份证识别（{{count.idcard}} 次）</text>
          <text class="desc">可识别身份证「正面」，包含姓名、性别、出生日期、住址、证件号等。</text>
        </view>
      </view>
      <view class="we-slide">
        <view class="item" @tap="upload(drive,{{count.drivecard}})">
          <image lazy-load="true" src="../image/temp3.png" />
          <text class="title">驾驶证识别（{{count.drivecard}} 次）</text>
          <text class="desc">针对驾驶证信息进行识别，格式化显示姓名，证号，车型，有效期等。</text>
        </view>
      </view>
      <view class="we-slide">
        <view class="item" @tap="upload(card,{{count.bankcard}})">
          <image lazy-load="true" src="../image/temp4.png" />
          <text class="title">银行卡识别（{{count.bankcard}} 次）</text>
          <text class="desc">识别银行卡号，类型，名称等信息，并格式化显示。</text>
        </view>
      </view>
      <view class="we-slide">
        <view class="item" @tap="upload(enhance,{{count.enhance}})">
          <image lazy-load="true" src="../image/temp6.png" />
          <text class="title">生僻字识别（{{count.enhance}} 次）</text>
          <text class="desc">适用于繁体字图片文件识别，准确率高，但耗时较长。</text>
        </view>
      </view>
    </weSwiper>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import weSwiper from 'wepy-com-swiper';

  export default class MySwiper extends wepy.page {

    components = {
      weSwiper: weSwiper
    }

    data = {
      index: 0,
      lflag: true,
      rflag: true,
      count: {
        general: 0,
        receipt: 0, // 票据
        idcard: 0,
        drivecard: 0,
        bankcard: 0,
        enhance: 0,
      },
      userInfo: null,
      swiper: {
        // direction: 'vertical',
        // width: 180,
        slideLength: 6,
        initialSlide: 0,
        /**
         * swiper初始化后执行
         * @param swiper
         */
        onInit (weswiper) {
          console.log(weswiper);
        },
        /**
         * 手指碰触slide时执行
         * @param swiper
         * @param event
         */
        onTouchStart (weswiper, event) {

        },
        /**
         * 手指碰触slide并且滑动时执行
         * @param swiper
         * @param event
         */
        onTouchMove (weswiper, event) {

        },
        /**
         * 手指离开slide时执行
         * @param swiper
         * @param event
         */
        onTouchEnd (weswiper, event) {
          // console.log(weswiper.activeIndex,'weswiper.activeIndex');
          // if(weswiper.activeIndex === 5){
          //   wx.showToast({
          //     title: '已经到尾啦～',
          //     icon: 'none',
          //     duration: 1000
          //   })
          // } else if(weswiper.activeIndex === 0) {
          //   wx.showToast({
          //     title: '已经到头啦～',
          //     icon: 'none',
          //     duration: 1000
          //   })
          // }
        },
        /**
         *  slide达到过渡条件时执行
         */
        onSlideChangeStart (weswiper) {

        },
        /**
         *  swiper从一个slide过渡到另一个slide结束时执行
         */
        onSlideChangeEnd (weswiper) {
          // console.log(weswiper.activeIndex,'weswiper.activeIndex');
          wx.setStorageSync('index', weswiper.activeIndex);
        },
        /**
         *  过渡时触发
         */
        onTransitionStart (weswiper) {

        },
        /**
         *  过渡结束时执行
         */
        onTransitionEnd (weswiper) {
          // console.log(weswiper.activeIndex,'weswiper.activeIndex');
          // if(weswiper.activeIndex === 5){
          //   wx.showToast({
          //     title: '已经到尾啦～',
          //     icon: 'none',
          //     duration: 1000
          //   })
          // } else if(weswiper.activeIndex === 0) {
          //   wx.showToast({
          //     title: '已经到头啦～',
          //     icon: 'none',
          //     duration: 1000
          //   })
          // }

          // wx.setStorageSync('index', weswiper.activeIndex);
          
          // console.log(arguments,'arguments');
          // console.log(weswiper.isBeginning,'isBeginning');
          // if (weswiper.isBeginning){
          //   console.log('tail');
          //   this.lflag = false;
          // } else if (weswiper.isEnd) {
          //   console.log('head');
          //   this.rflag = false;
          // }
        },
        /**
         *  手指触碰swiper并且拖动slide时执行
         */
        onSlideMove (weswiper) {
          // console.log(weswiper.activeIndex,'weswiper.activeIndex');
        },
        /**
         * slide达到过渡条件 且规定了方向 向前（右、下）切换时执行
         */
        onSlideNextStart (weswiper) {

        },
        /**
         *  slide达到过渡条件 且规定了方向 向前（右、下）切换结束时执行
         */
        onSlideNextEnd (weswiper) {
          // console.log(weswiper.activeIndex,'next');
          wx.setStorageSync('index', weswiper.activeIndex);
        },
        /**
         *  slide达到过渡条件 且规定了方向 向前（左、上）切换时执行
         */
        onSlidePrevStart (swiper) {

        },
        /**
         *  slide达到过渡条件 且规定了方向 向前（左、上）切换结束时执行
         */
        onSlidePrevEnd (weswiper) {
          // console.log(weswiper.activeIndex,'prev');
          wx.setStorageSync('index', weswiper.activeIndex);
        }
      }
    }

    methods = {
      goNext(weswiper) {
        let index = wx.getStorageSync('index');
        console.log(index);
        if(index < 5){
          this.$invoke('weSwiper', 'slideNext');
        } else {
          wx.showToast({
            title: '已经到尾啦～',
            icon: 'none',
            duration: 1000
          })
        }
      },
      goPrev(weswiper) {
        let index = wx.getStorageSync('index');
        if(index > 0){
          this.$invoke('weSwiper', 'slidePrev');
        } else {
          wx.showToast({
            title: '已经到头啦～',
            icon: 'none',
            duration: 1000
          })
        }
      },
      upload(e,times) {
        // console.log(times,'times');
        if(times === 0) {
          wx.showModal({
            title: '提示',
            confirmText: '帮助',
            // cancelText: '',
            content: '今日该类型「免费」次数已经用完，请使用其他类型。或等待次日恢复使用次数!',
            success: function(res) {
              if (res.confirm) {
                // console.log('用户点击确定');
                wx.navigateTo({
                  url: 'help'
                })
              } else if (res.cancel) {
                console.log('用户点击取消');
              }
            }
          })
          return;
        }
        let self = this;
        wx.chooseImage({
          count: 1, // 默认9
          sizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success: function (res) {
            let tempFilePaths = res.tempFilePaths;
            // console.log(tempFilePaths,'tempFilePaths');
            wx.setStorageSync('imageurl',tempFilePaths[0]);

            if(e === 'ticket' || e === 'enhance') {
              wx.navigateTo({
                url: `crop1`
              });
              wx.setStorageSync('type', e);
            } else {
              wx.navigateTo({
                url: `preview?type=${e}`
              });
              wx.setStorageSync('type', e);
            }

          }
        })
      },
    }

    getOneLimitTimes() {
      console.log(wx.getStorageSync('userinfo'),'this.userInfo');
      if(!wx.getStorageSync('userinfo')) return;
      let self = this;
      wx.request({
        url: 'https://www.iocr.vip/ai/users/times/me',
        header: {authid:wx.getStorageSync('userinfo')},
        success: function(res) {
          console.log(res.data,'me');
          if(res.data.code === 200) {
            let temp = res.data.data;
            self.count = {
              general: temp.general,
              receipt: temp.receipt,
              idcard: temp.idcard,
              drivecard: temp.drivecard,
              bankcard: temp.bankcard,
              enhance: temp.enhance
            }
            self.$apply();
          }
        }
      })
    }

    getUserInfo() {
      let self = this;
      wx.getUserInfo({
        success: function(res) {
          // console.log(res.userInfo);
          self.userInfo = res.userInfo;
          // let userInfo = res.userInfo;
          // let nickName = userInfo.nickName
          // let avatarUrl = userInfo.avatarUrl
          // let gender = userInfo.gender //性别 0：未知、1：男、2：女
          // let province = userInfo.province
          // let city = userInfo.city
          // let country = userInfo.country
          wx.setStorageSync('userinfo', self.userInfo.avatarUrl);
          self.getOneLimitTimes();
        },
        fail: function(error) {
          // console.log(error);
          wx.showModal({
            title: '警告',
            confirmText: '授权',
            cancelText: '不授权',
            content: `若不授权微信登陆，则无法使用「AI识图」功能；点击重新获取授权，则可重新使用；若点击不授权，后期还使用小程序，需在微信「发现小程序」，删掉「AI识图」，重新搜索授权登陆，方可使用。`,
            success: function(res) {
              if (res.confirm) {
                wx.openSetting({
                  success:function(res){
                    // console.log(res,'res');
                    wx.showToast({
                      title: '授权成功',
                      icon: 'none',
                      duration: 2000
                    })
                    self.getOneLimitTimes();
                  }
                })
              } else if (res.cancel) {
                console.log('用户点击取消');
                self.count = {
                  general: 0,
                  receipt: 0,
                  idcard: 0,
                  drivecard: 0,
                  bankcard: 0,
                  enhance: 0
                }
                self.$apply();
              }
            }
          })
        }
      })
    }
    
    onLoad() {
      this.index = 0;
    }
  }
</script>